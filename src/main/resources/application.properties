quarkus.http.port=8083
quarkus.http.cors=true
quarkus.http.http2=false


quarkus.http.cors.origins=http://localhost:8083
quarkus.http.cors.methods=GET,PUT,POST
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true

#CONEXAO COM O H2 QUE FUNCIONA

quarkus.datasource.jdbc.url = jdbc:h2:mem:test
quarkus.datasource.driver=org.h2.Driver
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.datasource.db-kind = h2
quarkus.datasource.username = sa
quarkus.datasource.password =
#FIM CONEXAO COM O H2 QUE FUNCIONA

# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.sql-load-script = data.sql

#quarkus.smallrye-openapi.path=/swagger
#quarkus.resteasy.path=/api

#banco de dados h2, aqui dá conexao recusada
#quarkus.datasource.url=jdbc:h2:tcp://localhost/mem:test
#quarkus.datasource.driver=org.h2.Driver
#quarkus.hibernate-orm.database.generation = drop-and-create
#quarkus.hibernate-orm.log.sql=true
#quarkus.datasource.username = sa
#quarkus.datasource.password =


#apenas daqui para baixo é a configuracao que funciona

#quarkus.datasource.url=jdbc:mysql://localhost:3306/teste
#quarkus.datasource.username=admin
#quarkus.datasource.password=admin

#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.dialect=org.hibernate.dialect.MySQL8Dialect
